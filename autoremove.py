import os
import telebot
import json
import random
from datetime import datetime
from telebot import types

TOKEN = os.getenv("TOKEN")
if not TOKEN:
    raise ValueError("TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")

bot = telebot.TeleBot(TOKEN)

bot.set_my_commands([
    types.BotCommand("addsize", "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–º–µ—Ä (—Ä–∞–∑ –≤ –¥–µ–Ω—å)"),
    types.BotCommand("showstat", "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"),
    types.BotCommand("help", "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"),
    types.BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∑–∞–Ω–æ–≤–æ")
])

DATA_FILE = "sizes.json"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
if os.path.exists(DATA_FILE):
    with open(DATA_FILE, "r", encoding="utf-8") as f:
        sizes = json.load(f)
else:
    sizes = {}

def save_data():
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(sizes, f, ensure_ascii=False, indent=2)

# –†–∞–Ω–¥–æ–º–Ω—ã–µ —Ñ—Ä–∞–∑—ã
funny_comments = [
    "‚ö° –ö–∞—Ä–∞–Ω–¥–∞—à —Ç–æ—á–∏—Ç—Å—è —Å–∞–º –ø–æ —Å–µ–±–µ!",
    "üòè –õ–∏–Ω–µ–π–∫–∞ —É–∂–µ —Ç—Ä–µ—â–∏—Ç –ø–æ —à–≤–∞–º!",
    "üî• –û—Å—Ç–æ—Ä–æ–∂–Ω–æ, —Å–∫–æ—Ä–æ –≤ –ø–æ—Ç–æ–ª–æ–∫ —É–ø—Ä—ë—Ç—Å—è!",
    "üìê –¢–µ–±–µ –ø–æ—Ä–∞ –ø–æ–∫—É–ø–∞—Ç—å –ø–µ–Ω–∞–ª –ø–æ–±–æ–ª—å—à–µ...",
    "üöÄ –≠—Ç–æ—Ç –∫–∞—Ä–∞–Ω–¥–∞—à –≥–æ—Ç–æ–≤ –∫ –ø–æ–ª—ë—Ç–∞–º!",
    "üòÇ –î–∞ –µ–≥–æ —É–∂–µ –º–æ–∂–Ω–æ –Ω–∞ —á–µ—Ä—Ç—ë–∂–Ω–æ–π –¥–æ—Å–∫–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å!",
]

def get_emoji(size):
    if size < 10:
        return "üçº"
    elif size < 20:
        return "üòè"
    elif size < 30:
        return "üî•"
    else:
        return "üöÄ"

def get_title(size):
    if size < 10:
        return "–ù–æ–≤–∏—á–æ–∫"
    elif size < 20:
        return "–£—á–µ–Ω–∏–∫ –ª–∏–Ω–µ–π–∫–∏"
    elif size < 30:
        return "–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –∫–∞—Ä–∞–Ω–¥–∞—à–µ–π"
    else:
        return "–õ–µ–≥–µ–Ω–¥–∞ XXL"

# üìå –ü–æ–¥—Å–∫–∞–∑–∫–∏
HELP_TEXT = (
    "üìñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
    "/addsize ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —Å–µ–±–µ +0.5‚Äì5 —Å–º (—Ä–∞–∑ –≤ –¥–µ–Ω—å)\n"
    "/showstat ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ –∫–∞—Ä–∞–Ω–¥–∞—à–µ–π\n"
    "/help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
)

@bot.message_handler(commands=["start"])
def start(message):
    bot.reply_to(
        message,
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –∫–∞—Ä–∞–Ω–¥–∞—à–µ–π.\n"
        "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å —Å–≤–æ–π –∫–∞—Ä–∞–Ω–¥–∞—à.\n\n" + HELP_TEXT
    )

@bot.message_handler(commands=["help"])
def help_cmd(message):
    bot.reply_to(message, HELP_TEXT)

@bot.message_handler(commands=["addsize"])
def add_size(message):
    user_id = str(message.from_user.id)
    username = message.from_user.first_name or "–ë–µ–∑—ã–º—è–Ω–Ω—ã–π"

    today = datetime.now().strftime("%Y-%m-%d")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –¥–æ–±–∞–≤–ª—è–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–µ–≥–æ–¥–Ω—è
    if user_id in sizes and sizes[user_id].get("last_update") == today:
        bot.reply_to(message, "üòÖ –°–µ–≥–æ–¥–Ω—è —Ç—ã —É–∂–µ –¥–æ–±–∞–≤–ª—è–ª —Ä–∞–∑–º–µ—Ä, –ø—Ä–∏—Ö–æ–¥–∏ –∑–∞–≤—Ç—Ä–∞!")
        return

    # –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ 0.5‚Äì5.0 —Å–º
    growth = round(random.uniform(0.5, 10.0), 1)

    if user_id not in sizes:
        sizes[user_id] = {"name": username, "size": 0, "last_update": ""}

    sizes[user_id]["size"] += growth
    sizes[user_id]["last_update"] = today
    sizes[user_id]["name"] = username

    save_data()

    comment = random.choice(funny_comments)
    emoji = get_emoji(sizes[user_id]["size"])
    title = get_title(sizes[user_id]["size"])

    bot.reply_to(
        message,
        f"{emoji} {username}, —Å–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –∫–∞—Ä–∞–Ω–¥–∞—à –≤—ã—Ä–æ—Å –Ω–∞ {growth} —Å–º!\n"
        f"–ò—Ç–æ–≥–æ: {sizes[user_id]['size']:.1f} —Å–º.\n"
        f"üèÖ –¢–∏—Ç—É–ª: {title}\n\n"
        f"{comment}\n\n"
        "üëâ –ü–æ–¥—Å–∫–∞–∑–∫–∞: –Ω–∞–ø–∏—à–∏ /showstat, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–π—Ç–∏–Ω–≥!"
    )

@bot.message_handler(commands=["showstat"])
def show_stat(message):
    if not sizes:
        bot.reply_to(message, "üìâ –ü–æ–∫–∞ –Ω–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
        return

    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞–∑–º–µ—Ä—É
    stats = sorted(sizes.items(), key=lambda x: x[1]["size"], reverse=True)

    text = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –∫–∞—Ä–∞–Ω–¥–∞—à–µ–π:\n\n"
    for i, (user_id, data) in enumerate(stats, start=1):
        emoji = get_emoji(data["size"])
        title = get_title(data["size"])
        crown = " üëë" if i == 1 else ""
        text += f"{i}. {emoji} {data['name']} ‚Äî {data['size']:.1f} —Å–º ({title}){crown}\n"

    text += "\nüëâ –ü–æ–¥—Å–∫–∞–∑–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π /addsize, —á—Ç–æ–±—ã –ø—Ä–æ–∫–∞—á–∞—Ç—å —Å–≤–æ–π –∫–∞—Ä–∞–Ω–¥–∞—à!"

    bot.reply_to(message, text)

# –û—Ç–∫–ª—é—á–∞–µ–º Webhook, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å polling
bot.remove_webhook()

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.infinity_polling()




